/* Generated automatically; do not modify!    "-*- buffer-read-only: t -*- */

static struct nxm_field_index all_nxm_fields[] = {
{ .nf = { NXM_HEADER(0x0,0x1,35,0,4), 0, "NXM_NX_DP_HASH", MFF_DP_HASH } },
{ .nf = { NXM_HEADER(0x2320,0xffff,0,0,8), 6, "NXOXM_ET_DP_HASH", MFF_DP_HASH } },
{ .nf = { NXM_HEADER(0x0,0x1,36,0,4), 0, "NXM_NX_RECIRC_ID", MFF_RECIRC_ID } },
{ .nf = { NXM_HEADER(0x0,0x1,37,0,4), 0, "NXM_NX_CONJ_ID", MFF_CONJ_ID } },
{ .nf = { NXM_HEADER(0x0,0x1,16,0,8), 0, "NXM_NX_TUN_ID", MFF_TUN_ID } },
{ .nf = { NXM_HEADER(0x0,0x8000,38,0,8), 4, "OXM_OF_TUNNEL_ID", MFF_TUN_ID } },
{ .nf = { NXM_HEADER(0x0,0x1,31,0,4), 0, "NXM_NX_TUN_IPV4_SRC", MFF_TUN_SRC } },
{ .nf = { NXM_HEADER(0x0,0x1,32,0,4), 0, "NXM_NX_TUN_IPV4_DST", MFF_TUN_DST } },
{ .nf = { NXM_HEADER(0x0,0x1,38,0,2), 0, "NXM_NX_TUN_GBP_ID", MFF_TUN_GBP_ID } },
{ .nf = { NXM_HEADER(0x0,0x1,39,0,1), 0, "NXM_NX_TUN_GBP_FLAGS", MFF_TUN_GBP_FLAGS } },
{ .nf = { NXM_HEADER(0x0,0x8000,2,0,8), 3, "OXM_OF_METADATA", MFF_METADATA } },
{ .nf = { NXM_HEADER(0x0,0x0,0,0,2), 0, "NXM_OF_IN_PORT", MFF_IN_PORT } },
{ .nf = { NXM_HEADER(0x0,0x8000,0,0,4), 3, "OXM_OF_IN_PORT", MFF_IN_PORT_OXM } },
{ .nf = { NXM_HEADER(0x4f4e4600,0xffff,43,0,8), 4, "ONFOXM_ET_ACTSET_OUTPUT", MFF_ACTSET_OUTPUT } },
{ .nf = { NXM_HEADER(0x0,0x8000,43,0,4), 6, "OXM_OF_ACTSET_OUTPUT", MFF_ACTSET_OUTPUT } },
{ .nf = { NXM_HEADER(0x0,0x1,33,0,4), 0, "NXM_NX_PKT_MARK", MFF_PKT_MARK } },
{ .nf = { NXM_HEADER(0x0,0x1,0,0,4), 0, "NXM_NX_REG0", MFF_REG0 } },
{ .nf = { NXM_HEADER(0x0,0x1,1,0,4), 0, "NXM_NX_REG1", MFF_REG1 } },
{ .nf = { NXM_HEADER(0x0,0x1,2,0,4), 0, "NXM_NX_REG2", MFF_REG2 } },
{ .nf = { NXM_HEADER(0x0,0x1,3,0,4), 0, "NXM_NX_REG3", MFF_REG3 } },
{ .nf = { NXM_HEADER(0x0,0x1,4,0,4), 0, "NXM_NX_REG4", MFF_REG4 } },
{ .nf = { NXM_HEADER(0x0,0x1,5,0,4), 0, "NXM_NX_REG5", MFF_REG5 } },
{ .nf = { NXM_HEADER(0x0,0x1,6,0,4), 0, "NXM_NX_REG6", MFF_REG6 } },
{ .nf = { NXM_HEADER(0x0,0x1,7,0,4), 0, "NXM_NX_REG7", MFF_REG7 } },
{ .nf = { NXM_HEADER(0x0,0x8001,0,0,8), 4, "OXM_OF_PKT_REG0", MFF_XREG0 } },
{ .nf = { NXM_HEADER(0x0,0x8001,1,0,8), 4, "OXM_OF_PKT_REG1", MFF_XREG1 } },
{ .nf = { NXM_HEADER(0x0,0x8001,2,0,8), 4, "OXM_OF_PKT_REG2", MFF_XREG2 } },
{ .nf = { NXM_HEADER(0x0,0x8001,3,0,8), 4, "OXM_OF_PKT_REG3", MFF_XREG3 } },
{ .nf = { NXM_HEADER(0x0,0x0,2,0,6), 0, "NXM_OF_ETH_SRC", MFF_ETH_SRC } },
{ .nf = { NXM_HEADER(0x0,0x8000,4,0,6), 3, "OXM_OF_ETH_SRC", MFF_ETH_SRC } },
{ .nf = { NXM_HEADER(0x0,0x0,1,0,6), 0, "NXM_OF_ETH_DST", MFF_ETH_DST } },
{ .nf = { NXM_HEADER(0x0,0x8000,3,0,6), 3, "OXM_OF_ETH_DST", MFF_ETH_DST } },
{ .nf = { NXM_HEADER(0x0,0x0,3,0,2), 0, "NXM_OF_ETH_TYPE", MFF_ETH_TYPE } },
{ .nf = { NXM_HEADER(0x0,0x8000,5,0,2), 3, "OXM_OF_ETH_TYPE", MFF_ETH_TYPE } },
{ .nf = { NXM_HEADER(0x0,0x0,4,0,2), 0, "NXM_OF_VLAN_TCI", MFF_VLAN_TCI } },
{ .nf = { NXM_HEADER(0x0,0x8000,6,0,2), 3, "OXM_OF_VLAN_VID", MFF_VLAN_VID } },
{ .nf = { NXM_HEADER(0x0,0x8000,7,0,1), 3, "OXM_OF_VLAN_PCP", MFF_VLAN_PCP } },
{ .nf = { NXM_HEADER(0x0,0x8000,34,0,4), 3, "OXM_OF_MPLS_LABEL", MFF_MPLS_LABEL } },
{ .nf = { NXM_HEADER(0x0,0x8000,35,0,1), 3, "OXM_OF_MPLS_TC", MFF_MPLS_TC } },
{ .nf = { NXM_HEADER(0x0,0x8000,36,0,1), 4, "OXM_OF_MPLS_BOS", MFF_MPLS_BOS } },
{ .nf = { NXM_HEADER(0x0,0x0,7,0,4), 0, "NXM_OF_IP_SRC", MFF_IPV4_SRC } },
{ .nf = { NXM_HEADER(0x0,0x8000,11,0,4), 3, "OXM_OF_IPV4_SRC", MFF_IPV4_SRC } },
{ .nf = { NXM_HEADER(0x0,0x0,8,0,4), 0, "NXM_OF_IP_DST", MFF_IPV4_DST } },
{ .nf = { NXM_HEADER(0x0,0x8000,12,0,4), 3, "OXM_OF_IPV4_DST", MFF_IPV4_DST } },
{ .nf = { NXM_HEADER(0x0,0x1,19,0,16), 0, "NXM_NX_IPV6_SRC", MFF_IPV6_SRC } },
{ .nf = { NXM_HEADER(0x0,0x8000,26,0,16), 3, "OXM_OF_IPV6_SRC", MFF_IPV6_SRC } },
{ .nf = { NXM_HEADER(0x0,0x1,20,0,16), 0, "NXM_NX_IPV6_DST", MFF_IPV6_DST } },
{ .nf = { NXM_HEADER(0x0,0x8000,27,0,16), 3, "OXM_OF_IPV6_DST", MFF_IPV6_DST } },
{ .nf = { NXM_HEADER(0x0,0x1,27,0,4), 0, "NXM_NX_IPV6_LABEL", MFF_IPV6_LABEL } },
{ .nf = { NXM_HEADER(0x0,0x8000,28,0,4), 3, "OXM_OF_IPV6_FLABEL", MFF_IPV6_LABEL } },
{ .nf = { NXM_HEADER(0x0,0x0,6,0,1), 0, "NXM_OF_IP_PROTO", MFF_IP_PROTO } },
{ .nf = { NXM_HEADER(0x0,0x8000,10,0,1), 3, "OXM_OF_IP_PROTO", MFF_IP_PROTO } },
{ .nf = { NXM_HEADER(0x0,0x0,5,0,1), 0, "NXM_OF_IP_TOS", MFF_IP_DSCP } },
{ .nf = { NXM_HEADER(0x0,0x8000,8,0,1), 3, "OXM_OF_IP_DSCP", MFF_IP_DSCP_SHIFTED } },
{ .nf = { NXM_HEADER(0x0,0x1,28,0,1), 0, "NXM_NX_IP_ECN", MFF_IP_ECN } },
{ .nf = { NXM_HEADER(0x0,0x8000,9,0,1), 3, "OXM_OF_IP_ECN", MFF_IP_ECN } },
{ .nf = { NXM_HEADER(0x0,0x1,29,0,1), 0, "NXM_NX_IP_TTL", MFF_IP_TTL } },
{ .nf = { NXM_HEADER(0x0,0x1,26,0,1), 0, "NXM_NX_IP_FRAG", MFF_IP_FRAG } },
{ .nf = { NXM_HEADER(0x0,0x0,15,0,2), 0, "NXM_OF_ARP_OP", MFF_ARP_OP } },
{ .nf = { NXM_HEADER(0x0,0x8000,21,0,2), 3, "OXM_OF_ARP_OP", MFF_ARP_OP } },
{ .nf = { NXM_HEADER(0x0,0x0,16,0,4), 0, "NXM_OF_ARP_SPA", MFF_ARP_SPA } },
{ .nf = { NXM_HEADER(0x0,0x8000,22,0,4), 3, "OXM_OF_ARP_SPA", MFF_ARP_SPA } },
{ .nf = { NXM_HEADER(0x0,0x0,17,0,4), 0, "NXM_OF_ARP_TPA", MFF_ARP_TPA } },
{ .nf = { NXM_HEADER(0x0,0x8000,23,0,4), 3, "OXM_OF_ARP_TPA", MFF_ARP_TPA } },
{ .nf = { NXM_HEADER(0x0,0x1,17,0,6), 0, "NXM_NX_ARP_SHA", MFF_ARP_SHA } },
{ .nf = { NXM_HEADER(0x0,0x8000,24,0,6), 3, "OXM_OF_ARP_SHA", MFF_ARP_SHA } },
{ .nf = { NXM_HEADER(0x0,0x1,18,0,6), 0, "NXM_NX_ARP_THA", MFF_ARP_THA } },
{ .nf = { NXM_HEADER(0x0,0x8000,25,0,6), 3, "OXM_OF_ARP_THA", MFF_ARP_THA } },
{ .nf = { NXM_HEADER(0x0,0x0,9,0,2), 0, "NXM_OF_TCP_SRC", MFF_TCP_SRC } },
{ .nf = { NXM_HEADER(0x0,0x8000,13,0,2), 3, "OXM_OF_TCP_SRC", MFF_TCP_SRC } },
{ .nf = { NXM_HEADER(0x0,0x0,10,0,2), 0, "NXM_OF_TCP_DST", MFF_TCP_DST } },
{ .nf = { NXM_HEADER(0x0,0x8000,14,0,2), 3, "OXM_OF_TCP_DST", MFF_TCP_DST } },
{ .nf = { NXM_HEADER(0x0,0x1,34,0,2), 0, "NXM_NX_TCP_FLAGS", MFF_TCP_FLAGS } },
{ .nf = { NXM_HEADER(0x4f4e4600,0xffff,42,0,6), 4, "ONFOXM_ET_TCP_FLAGS", MFF_TCP_FLAGS } },
{ .nf = { NXM_HEADER(0x0,0x8000,42,0,2), 6, "OXM_OF_TCP_FLAGS", MFF_TCP_FLAGS } },
{ .nf = { NXM_HEADER(0x0,0x0,11,0,2), 0, "NXM_OF_UDP_SRC", MFF_UDP_SRC } },
{ .nf = { NXM_HEADER(0x0,0x8000,15,0,2), 3, "OXM_OF_UDP_SRC", MFF_UDP_SRC } },
{ .nf = { NXM_HEADER(0x0,0x0,12,0,2), 0, "NXM_OF_UDP_DST", MFF_UDP_DST } },
{ .nf = { NXM_HEADER(0x0,0x8000,16,0,2), 3, "OXM_OF_UDP_DST", MFF_UDP_DST } },
{ .nf = { NXM_HEADER(0x0,0x8000,17,0,2), 3, "OXM_OF_SCTP_SRC", MFF_SCTP_SRC } },
{ .nf = { NXM_HEADER(0x0,0x8000,18,0,2), 3, "OXM_OF_SCTP_DST", MFF_SCTP_DST } },
{ .nf = { NXM_HEADER(0x0,0x0,13,0,1), 0, "NXM_OF_ICMP_TYPE", MFF_ICMPV4_TYPE } },
{ .nf = { NXM_HEADER(0x0,0x8000,19,0,1), 3, "OXM_OF_ICMPV4_TYPE", MFF_ICMPV4_TYPE } },
{ .nf = { NXM_HEADER(0x0,0x0,14,0,1), 0, "NXM_OF_ICMP_CODE", MFF_ICMPV4_CODE } },
{ .nf = { NXM_HEADER(0x0,0x8000,20,0,1), 3, "OXM_OF_ICMPV4_CODE", MFF_ICMPV4_CODE } },
{ .nf = { NXM_HEADER(0x0,0x1,21,0,1), 0, "NXM_NX_ICMPV6_TYPE", MFF_ICMPV6_TYPE } },
{ .nf = { NXM_HEADER(0x0,0x8000,29,0,1), 3, "OXM_OF_ICMPV6_TYPE", MFF_ICMPV6_TYPE } },
{ .nf = { NXM_HEADER(0x0,0x1,22,0,1), 0, "NXM_NX_ICMPV6_CODE", MFF_ICMPV6_CODE } },
{ .nf = { NXM_HEADER(0x0,0x8000,30,0,1), 3, "OXM_OF_ICMPV6_CODE", MFF_ICMPV6_CODE } },
{ .nf = { NXM_HEADER(0x0,0x1,23,0,16), 0, "NXM_NX_ND_TARGET", MFF_ND_TARGET } },
{ .nf = { NXM_HEADER(0x0,0x8000,31,0,16), 3, "OXM_OF_IPV6_ND_TARGET", MFF_ND_TARGET } },
{ .nf = { NXM_HEADER(0x0,0x1,24,0,6), 0, "NXM_NX_ND_SLL", MFF_ND_SLL } },
{ .nf = { NXM_HEADER(0x0,0x8000,32,0,6), 3, "OXM_OF_IPV6_ND_SLL", MFF_ND_SLL } },
{ .nf = { NXM_HEADER(0x0,0x1,25,0,6), 0, "NXM_NX_ND_TLL", MFF_ND_TLL } },
{ .nf = { NXM_HEADER(0x0,0x8000,33,0,6), 3, "OXM_OF_IPV6_ND_TLL", MFF_ND_TLL } },
};
